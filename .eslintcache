[{"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/reportWebVitals.js":"1","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/index.tsx":"2","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/App.tsx":"3","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/store/store.ts":"4","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/components/NavBar/NavBar.tsx":"5","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/components/SortingVisualizer/SortingVisualizer.tsx":"6","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/store/reducers/reducer.ts":"7","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/store/actions/actions.ts":"8","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/SortingAlgorithm/BubbleSort.ts":"9","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/Util/Utility.ts":"10","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/SortingAlgorithm/MergeSort.ts":"11","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/SortingAlgorithm/QuickSort.ts":"12","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/SortingAlgorithm/HeapSort.ts":"13"},{"size":362,"mtime":1610937894726,"results":"14","hashOfConfig":"15"},{"size":544,"mtime":1611655216601,"results":"16","hashOfConfig":"15"},{"size":932,"mtime":1611655222032,"results":"17","hashOfConfig":"15"},{"size":658,"mtime":1611921733206,"results":"18","hashOfConfig":"15"},{"size":4467,"mtime":1611925651880,"results":"19","hashOfConfig":"15"},{"size":1939,"mtime":1611924638619,"results":"20","hashOfConfig":"15"},{"size":791,"mtime":1611924984825,"results":"21","hashOfConfig":"15"},{"size":3377,"mtime":1612046670646,"results":"22","hashOfConfig":"15"},{"size":895,"mtime":1611741596946,"results":"23","hashOfConfig":"15"},{"size":127,"mtime":1611925015915,"results":"24","hashOfConfig":"15"},{"size":1566,"mtime":1612045362794,"results":"25","hashOfConfig":"15"},{"size":1709,"mtime":1612046460282,"results":"26","hashOfConfig":"15"},{"size":3240,"mtime":1612046647717,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1tc4pt7",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/reportWebVitals.js",[],["59","60"],"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/index.tsx",[],["61","62"],"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/App.tsx",["63"],"import logo from './logo.svg';\nimport './App.css';\nimport { Container, Grid, Segment } from 'semantic-ui-react';\nimport NavBar from './components/NavBar/NavBar';\nimport SortingVisualizer from './components/SortingVisualizer/SortingVisualizer';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Container>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column style={{ padding: 0, margin: '0 0 0 auto'}} width={3}>\n                <NavBar/>\n              </Grid.Column>\n              <Grid.Column style={{padding: 0, margin: '0 auto 0 0'}} width={12}>\n                <Segment raised>\n                  <SortingVisualizer/>\n                </Segment>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/store/store.ts",[],"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/components/NavBar/NavBar.tsx",[],"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/components/SortingVisualizer/SortingVisualizer.tsx",[],"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/store/reducers/reducer.ts",["64"],"import { UserActionTypes } from \"../actions/actionTypes\";\nimport { SortingAlgorithm } from \"../actions/types\";\n\nconst initialState: SortingAlgorithm = {\n    selectedAlgorithm: null,\n    array: []\n};\n\nexport default function(state = initialState, action: UserActionTypes): SortingAlgorithm {\n    switch (action.type) {\n        case 'GENERATE_RANDOM_ARRAY':\n            return {\n                ...state, \n                array: action.array\n            };\n        case 'SET_ALGORITHM':\n            return {\n                ...state, \n                selectedAlgorithm: action.algorithm\n            };\n        case 'SORT_ARRAY':\n            return {\n                ...state,\n                selectedAlgorithm: action.algorithm\n            }\n        default:\n            return state;\n    }\n} ","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/store/actions/actions.ts",["65"],"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/SortingAlgorithm/BubbleSort.ts",[],"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/Util/Utility.ts",[],"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/SortingAlgorithm/MergeSort.ts",["66","67"],"export default function mergeSort(array: number[]): any[] {\n    const animation: any[] = [];\n    if(array.length == 1) return animation;\n    const auxArray = array.slice(); //Shallow copy of array\n    _mergesort(array, 0, array.length - 1, auxArray, animation);\n    return animation;\n};\n\nfunction _mergesort(mainArray: number[], start: number, end: number, auxArray: number[], animation: any[] ) {\n    if(start == end) return;\n    const middle = Math.floor((start + end) /2);\n    _mergesort(auxArray, start, middle, mainArray, animation);\n    _mergesort(auxArray, middle + 1, end, mainArray, animation);\n    _merge(mainArray, start, middle, end, auxArray, animation);\n}\n\nfunction _merge(mainArray: number[], start: number, middle: number, end: number, auxArray: number[], animation: any[]) {\n    let k = start;\n    let i = start;\n    let j = middle + 1;\n\n    while( i <= middle && j <= end ) {\n        animation.push([i,j]);\n        animation.push([i,j]);\n\n        if(auxArray[i] < auxArray[j]) {\n            animation.push([k, auxArray[i]]);\n            mainArray[k++] = auxArray[i++];\n        } else {\n            animation.push([k, auxArray[j]]);\n            mainArray[k++] = auxArray[j++];\n        }\n    }\n\n    while( i <= middle) {\n        animation.push([i, i]);\n        animation.push([i, i]);\n        animation.push([k, auxArray[i]]);\n        mainArray[k++] = auxArray[i++];\n    }\n\n    while( j <= end) {\n        animation.push([j, j]);\n        animation.push([j, j]);\n        animation.push([k, auxArray[j]]);\n        mainArray[k++] = auxArray[j++];\n    }\n}","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/SortingAlgorithm/QuickSort.ts",["68"],"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/SortingAlgorithm/HeapSort.ts",["69","70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":9,"column":1,"nodeType":"82","endLine":29,"endColumn":2},{"ruleId":"76","severity":1,"message":"83","line":2,"column":9,"nodeType":"78","messageId":"79","endLine":2,"endColumn":15},{"ruleId":"84","severity":1,"message":"85","line":3,"column":21,"nodeType":"86","messageId":"87","endLine":3,"endColumn":23},{"ruleId":"84","severity":1,"message":"85","line":10,"column":14,"nodeType":"86","messageId":"87","endLine":10,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":67,"column":6,"nodeType":"78","messageId":"90","endLine":67,"endColumn":10},{"ruleId":"76","severity":1,"message":"91","line":7,"column":6,"nodeType":"78","messageId":"79","endLine":7,"endColumn":7},{"ruleId":"76","severity":1,"message":"92","line":119,"column":10,"nodeType":"78","messageId":"79","endLine":119,"endColumn":20},{"ruleId":"88","severity":1,"message":"89","line":183,"column":8,"nodeType":"78","messageId":"90","endLine":183,"endColumn":12},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Action' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-redeclare","'temp' is already defined.","redeclared","'k' is assigned a value but never used.","'maxHeapify' is defined but never used.","no-global-assign","no-unsafe-negation"]