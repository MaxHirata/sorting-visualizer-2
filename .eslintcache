[{"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/reportWebVitals.js":"1","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/index.tsx":"2","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/App.tsx":"3","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/store/store.ts":"4","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/components/NavBar/NavBar.tsx":"5","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/components/SortingVisualizer/SortingVisualizer.tsx":"6","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/store/reducers/reducer.ts":"7","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/store/actions/actions.ts":"8","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/SortingAlgorithm/BubbleSort.ts":"9","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/Util/Utility.ts":"10"},{"size":362,"mtime":1610937894726,"results":"11","hashOfConfig":"12"},{"size":544,"mtime":1611655216601,"results":"13","hashOfConfig":"12"},{"size":932,"mtime":1611655222032,"results":"14","hashOfConfig":"12"},{"size":658,"mtime":1611921733206,"results":"15","hashOfConfig":"12"},{"size":4453,"mtime":1611924928378,"results":"16","hashOfConfig":"12"},{"size":1939,"mtime":1611924638619,"results":"17","hashOfConfig":"12"},{"size":791,"mtime":1611924984825,"results":"18","hashOfConfig":"12"},{"size":3178,"mtime":1611921609673,"results":"19","hashOfConfig":"12"},{"size":895,"mtime":1611741596946,"results":"20","hashOfConfig":"12"},{"size":127,"mtime":1611925015915,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1tc4pt7",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/reportWebVitals.js",[],["48","49"],"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/index.tsx",[],["50","51"],"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/App.tsx",["52"],"import logo from './logo.svg';\nimport './App.css';\nimport { Container, Grid, Segment } from 'semantic-ui-react';\nimport NavBar from './components/NavBar/NavBar';\nimport SortingVisualizer from './components/SortingVisualizer/SortingVisualizer';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Container>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column style={{ padding: 0, margin: '0 0 0 auto'}} width={3}>\n                <NavBar/>\n              </Grid.Column>\n              <Grid.Column style={{padding: 0, margin: '0 auto 0 0'}} width={12}>\n                <Segment raised>\n                  <SortingVisualizer/>\n                </Segment>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/store/store.ts",[],"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/components/NavBar/NavBar.tsx",[],"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/components/SortingVisualizer/SortingVisualizer.tsx",[],"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/store/reducers/reducer.ts",["53"],"import { UserActionTypes } from \"../actions/actionTypes\";\nimport { SortingAlgorithm } from \"../actions/types\";\n\nconst initialState: SortingAlgorithm = {\n    selectedAlgorithm: null,\n    array: []\n};\n\nexport default function(state = initialState, action: UserActionTypes): SortingAlgorithm {\n    switch (action.type) {\n        case 'GENERATE_RANDOM_ARRAY':\n            return {\n                ...state, \n                array: action.array\n            };\n        case 'SET_ALGORITHM':\n            return {\n                ...state, \n                selectedAlgorithm: action.algorithm\n            };\n        case 'SORT_ARRAY':\n            return {\n                ...state,\n                selectedAlgorithm: action.algorithm\n            }\n        default:\n            return state;\n    }\n} ","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/store/actions/actions.ts",["54","55","56","57"],"import {randomIntFromIntervals} from '../../Util/Utility';\nimport {Action, Dispatch} from 'redux';\nimport bubbleSort from '../../SortingAlgorithm/BubbleSort';\nimport mergeSort from '../../SortingAlgorithm/MergeSort';\nimport heapSort from '../../SortingAlgorithm/HeapSort';\nimport quickSort from '../../SortingAlgorithm/QuickSort';\nimport { AppActions } from './actionTypes';\nimport { AppState } from '../store';\n\nconst PRIMARY_COLOR = '#00ffcc';\nconst SECONDARY_COLOR = 'red';\nconst ANIMATION_SPEED_MS = 5;\n\nexport const setSelectedAlgorithm = (algorithm: string): AppActions => ({\n        type: 'SET_ALGORITHM',\n        algorithm\n});\n\nexport const generateRandomArray = (array: number[]): AppActions => ({\n    type: \"GENERATE_RANDOM_ARRAY\",\n    array\n});\n\nexport const sortArray = (): AppActions => ({\n    type: \"SORT_ARRAY\",\n    algorithm: null\n}); \n\nexport const startGenerateRandomArray = () => {\n    return(dispatch: Dispatch<AppActions>, getState: () => AppState) => {\n        const randomArray = [];\n        for (let i = 0; i < 80; i++) {\n            randomArray.push(randomIntFromIntervals(7, 750));\n        }\n\n        dispatch(\n            generateRandomArray(randomArray)\n        )\n    }\n}\n\nexport const startSortArray = (selectedAlgorithm: string, unsortedArray: number[]) => {\n    return(dispatch: Dispatch<AppActions>, getState: () => AppState) => {\n        let animationSequence: any[] = [];\n\n        switch(selectedAlgorithm) {\n            case 'bubblesort':\n                console.log(\"SELECTED BUBBLESORT\");\n                animationSequence = bubbleSort(unsortedArray);\n                break;\n            case 'mergesort':\n                console.log(\"SELECTED MERGESORT\");\n                break;\n            case 'quicksort':\n                console.log(\"SELECTED QUICKSORT\");\n                break;\n            case 'heapsort':\n                console.log(\"SELECTED HEAPSORT\");\n                break;\n            default:\n                break;\n        }\n\n        for (let i = 0; i < animationSequence.length; i++) {\n            let arrayBars = document.getElementsByClassName('array-bar');\n            const isColorChange = i % 3 !== 2;\n            if (isColorChange) {\n                const [\n                    barOneIdx,\n                    barTwoIdx\n                ] = animationSequence[i];\n                const barOneStyle = (arrayBars[barOneIdx] as any).style;\n                const barTwoStyle = (arrayBars[barTwoIdx] as any).style;\n                const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                }, ANIMATION_SPEED_MS);\n            } else {\n                setTimeout(() => {\n                    const [\n                        barOneIdx,\n                        newHeight\n                    ] = animationSequence[i];\n                    const barOneStyle = (arrayBars[barOneIdx] as any).style;\n                    barOneStyle.height = `${newHeight}px`;\n                }, i * ANIMATION_SPEED_MS);\n            }\n        }\n\n        dispatch(sortArray());\n    }\n\n\n}\n\n\n","/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/SortingAlgorithm/BubbleSort.ts",[],["58","59"],"/Users/maxhirata/Documents/GitHub/sorting-visualizer-2/src/Util/Utility.ts",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":8,"nodeType":"66","messageId":"67","endLine":1,"endColumn":12},{"ruleId":"68","severity":1,"message":"69","line":9,"column":1,"nodeType":"70","endLine":29,"endColumn":2},{"ruleId":"64","severity":1,"message":"71","line":2,"column":9,"nodeType":"66","messageId":"67","endLine":2,"endColumn":15},{"ruleId":"64","severity":1,"message":"72","line":4,"column":8,"nodeType":"66","messageId":"67","endLine":4,"endColumn":17},{"ruleId":"64","severity":1,"message":"73","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":16},{"ruleId":"64","severity":1,"message":"74","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":17},{"ruleId":"60","replacedBy":"75"},{"ruleId":"62","replacedBy":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Action' is defined but never used.","'mergeSort' is defined but never used.","'heapSort' is defined but never used.","'quickSort' is defined but never used.",["77"],["78"],"no-global-assign","no-unsafe-negation"]